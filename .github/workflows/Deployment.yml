name: S3 + CloudFront

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: 20.x

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: SWP391
    permissions:
      id-token: write
      contents: read

    # Nếu project FE nằm trong subfolder, bật dòng dưới:
    # defaults:
    #   run:
    #     working-directory: ./FrontEnd/FrontEnd

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install deps (lockfile-aware)
        run: |
          set -euo pipefail
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            corepack prepare pnpm@latest --activate
            pnpm -v
            pnpm install --frozen-lockfile
            echo "PM=pnpm" >> $GITHUB_ENV
          elif [ -f yarn.lock ]; then
            corepack enable
            corepack prepare yarn@stable --activate
            yarn -v
            yarn install --frozen-lockfile
            echo "PM=yarn" >> $GITHUB_ENV
          else
            npm ci --no-audit --no-fund
            echo "PM=npm" >> $GITHUB_ENV
          fi

      - name: Build (theo PM)
        run: |
          set -euo pipefail
          case "${PM}" in
            pnpm) pnpm build ;;
            yarn) yarn build ;;
            *)    npm run build ;;
          esac

          # Auto tìm dist/build/out cả khi ở repo root hoặc subfolder
          DIST_DIR=""
          for p in \
            "dist" "build" "out" \
            "FrontEnd/FrontEnd/dist" "FrontEnd/dist" "frontend/dist" \
            "./dist" "./build" "./out"
          do
            if [ -d "$p" ]; then DIST_DIR="$p"; break; fi
          done

          # fallback: search sâu tối đa 3 cấp cho chắc
          if [ -z "$DIST_DIR" ]; then
            DIST_DIR=$(find . -maxdepth 3 -type d -name dist | head -n1 || true)
          fi

          if [ -z "${DIST_DIR}" ]; then
            echo "No dist/build/out found after build"; exit 1
          fi

          echo "DIST_DIR=$DIST_DIR" >> $GITHUB_ENV
          echo "Using DIST_DIR=$DIST_DIR"
          ls -la "$DIST_DIR"

      - name: Configure AWS (OIDC AssumeRole)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.AWS_ROLE_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: gha-frontend-deploy

      - name: Sync to S3 (immutable assets)
        run: |
          aws s3 sync "$DIST_DIR" "s3://${{ secrets.S3_BUCKET }}/" \
            --delete \
            --cache-control max-age=31536000,public \
            --exclude index.html

      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp "$DIST_DIR/index.html" "s3://${{ secrets.S3_BUCKET }}/index.html" \
            --cache-control max-age=0,no-cache,no-store,must-revalidate

      - name: Invalidate CloudFront (chỉ cần index)
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ secrets.CF_DIST_ID }}" \
            --paths "/index.html"
